basePath: /
definitions:
  request.AddMenu:
    properties:
      menuType:
        description: 菜单类型,1:目录 2:菜单 3:按钮
        type: integer
      name:
        description: 菜单名称
        type: string
      permission:
        description: 菜单权限标识
        type: string
      sort:
        description: 菜单排序
        type: integer
    required:
    - menuType
    - name
    type: object
  request.ChangeUserInfo:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: integer
        type: array
      email:
        description: 用户邮箱
        type: string
      enable:
        description: 冻结用户
        type: integer
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      phone:
        description: 用户手机号
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
    type: object
  request.CommonIds:
    properties:
      ids:
        items: {}
        type: array
    type: object
  request.LoginParam:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaID:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - password
    - username
    type: object
  request.PageInfo:
    properties:
      keyword:
        description: 关键字
        type: string
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.RegisterParam:
    properties:
      address:
        description: 地址
        type: string
      birthday:
        description: 生日
        type: string
      email:
        description: 邮箱
        type: string
      nickName:
        description: 昵称
        maxLength: 32
        minLength: 3
        type: string
      password:
        description: 明文加密后的密码
        type: string
      phone:
        description: 手机号码
        type: string
      roleID:
        type: string
      username:
        description: 用户名
        type: string
    required:
    - nickName
    - password
    - phone
    - username
    type: object
  request.RoleParam:
    properties:
      parentCode:
        description: 父角色Code
        type: string
      roleCode:
        description: 角色code
        type: string
      roleDesc:
        description: 备注
        type: string
      roleName:
        description: 角色名
        type: string
    required:
    - roleCode
    - roleName
    type: object
  request.UpdateMenu:
    properties:
      icon:
        description: 菜单icon
        type: string
      id:
        description: 菜单ID
        type: integer
      menuType:
        description: 菜单类型,1:目录 2:菜单 3:按钮
        type: integer
      name:
        description: 菜单名称
        type: string
      permission:
        description: 菜单权限标识
        type: string
      sort:
        description: 菜单排序
        type: integer
    required:
    - id
    - menuType
    - name
    type: object
  response.Meta:
    properties:
      request_id:
        type: string
    type: object
  response.PageResult:
    properties:
      list: {}
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        description: 业务状态码
        type: integer
      data:
        description: 响应数据
      meta:
        allOf:
        - $ref: '#/definitions/response.Meta'
        description: Meta 源数据,存储如请求ID,分页等信息
      msg:
        description: 提示信息
        type: string
    type: object
  response.SysCaptchaResponse:
    properties:
      captcha_id:
        type: string
      captcha_length:
        type: integer
      pic_path:
        type: string
    type: object
info:
  contact:
    name: go-swagger帮助文档
    url: https://github.com/swaggo/swag/blob/master/README_zh-CN.md
  description: This is gin learn api docs.
  license:
    name: Apache 2.0
  title: gin swagger API接口文档
  version: 0.0.1
paths:
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取用户列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangeUserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 设置用户信息
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
  /v1/api/admin/login:
    post:
      consumes:
      - application/json
      description: 用户登录
      parameters:
      - description: 用户名,密码,验证码,验证码ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginParam'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 用户登录
      tags:
      - 登陆注册
  /v1/api/admin/logout:
    post:
      consumes:
      - application/json
      description: 退出登录
      parameters:
      - description: 用户名,密码,验证码,验证码ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.LoginParam'
      produces:
      - application/json
      responses: {}
      summary: 用户退出
      tags:
      - 登陆注册
  /v1/api/admin/register:
    post:
      consumes:
      - application/json
      description: 用户注册
      parameters:
      - description: 登录请求数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RegisterParam'
      produces:
      - application/json
      responses: {}
      summary: 用户注册
      tags:
      - 登陆注册
  /v1/api/captcha:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: 生成验证码,返回包括随机数id,base64,验证码长度
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.SysCaptchaResponse'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - 登陆注册
  /v1/api/changePassword:
    post:
      consumes:
      - application/json
      description: 更改密码
      produces:
      - application/json
      responses: {}
      summary: 更改密码
      tags:
      - 登陆注册
  /v1/api/config:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses: {}
      summary: 获取配置
      tags:
      - Base
  /v1/api/jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: jwt加入黑名单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /v1/api/menu/addMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - 菜单管理
  /v1/api/menu/deleteMenu:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 菜单ID数组
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.CommonIds'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - 菜单管理
  /v1/api/menu/getMenuById:
    get:
      consumes:
      - application/json
      parameters:
      - description: 菜单ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 获取菜单
      tags:
      - 菜单管理
  /v1/api/menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: 分页获取基础menu列表,返回包括列表,总数,页码,每页数量
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/response.PageResult'
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /v1/api/menu/updateMenu:
    put:
      consumes:
      - application/json
      parameters:
      - description: 菜单ID
        in: path
        name: id
        required: true
        type: string
      - description: 菜单数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.UpdateMenu'
      produces:
      - application/json
      responses:
        "200":
          description: 更新菜单
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - 菜单管理
  /v1/api/role/addRole:
    post:
      consumes:
      - application/json
      description: 创建角色
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RoleParam'
      produces:
      - application/json
      responses: {}
      summary: 创建角色
      tags:
      - 角色管理
  /v1/api/role/delete/:id:
    delete:
      consumes:
      - application/json
      description: 删除角色
      parameters:
      - description: 角色ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
      summary: 删除角色
      tags:
      - 角色管理
  /v1/api/role/pageRole:
    post:
      consumes:
      - application/json
      description: 分页获取角色
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses: {}
      summary: 分页获取角色
      tags:
      - 角色管理
  /v1/api/role/update:
    put:
      consumes:
      - application/json
      description: update role
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses: {}
      summary: 更新角色
      tags:
      - 角色管理
swagger: "2.0"
